@page "/Iam/Roles/Create"

@using System.ComponentModel.DataAnnotations
@using IdentityManager.Data
@using Microsoft.AspNetCore.Identity

@inject RoleManager<ApplicationRole> RoleManager
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Role</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <EditForm method="post" Model="Input" OnValidSubmit="AddRole" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="form-floating mb-3">
                <InputText id="name" @bind-Value="Input.Name" class="form-control" placeholder="Please enter the name." />
                <label for="name" class="form-label">Name</label>
                <ValidationMessage For="() => Input.Name" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/Iam/Roles">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddRole()
    {
        var role = new ApplicationRole
            {
                Name = Input.Name,
            };

        var result = await RoleManager.CreateAsync(role);

        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("/Iam/Roles");
        }
    }

    private sealed class InputModel
    {
        [Required]
        [Display(Name = "Name")]
        public string? Name { get; set; }
    }
}
