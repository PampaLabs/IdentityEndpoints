@using Microsoft.AspNetCore.Identity
@using IdentityManager.Data

@inject SignInManager<ApplicationUser> SignInManager

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">IdentityManager</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Iam/Users">
                <i class="fa fa-solid fa-user"></i> Users
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Iam/Roles">
                <i class="fa fa-solid fa-users"></i> Roles
            </NavLink>
        </div>

        <AuthorizeView>
            <div class="nav-item px-3">
                <div class="nav-link">
                    <i class="bi bi-person-fill-nav-menu"></i> @context.User.Identity?.Name
                </div>
            </div>
        </AuthorizeView>

        <div class="nav-item px-3">
            <form action="Account/Logout" method="post">
                <AntiforgeryToken />
                <input type="hidden" name="ReturnUrl" value="" />
                <button type="submit" class="nav-link">
                    <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                </button>
            </form>
        </div>
    </nav>
</div>

@code {
    private bool hasExternalLogins;

    protected override async Task OnInitializedAsync()
    {
        hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
    }
}

